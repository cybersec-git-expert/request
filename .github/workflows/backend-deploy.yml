name: Deploy to Production

on:
  workflow_run:
    workflows: ["Backend CI"]
    types:
      - completed
    branches: [master, main]
  push:
    branches: [master, main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cybersec-git-expert/request-backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 44.211.63.136
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker ec2-user
          fi
          
          # Login to GitHub Container Registry
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Pull latest image
          docker pull ghcr.io/cybersec-git-expert/request-backend:latest
          
          # Stop and remove existing container
          docker stop request-backend || true
          docker rm request-backend || true
          
          # Create production.env if missing
          if [ ! -f /home/ec2-user/production.env ]; then
            echo "Creating production.env..."
            cat > /home/ec2-user/production.env << 'EOF'
          DB_HOST=requestdb.cq70gkkamvcs.us-east-1.rds.amazonaws.com
          DB_PORT=5432
          DB_NAME=requestdb
          DB_USERNAME=requestuser
          DB_PASSWORD=your_secure_password
          DB_SSL=true
          DB_MAX_CONNECTIONS=20
          DB_IDLE_TIMEOUT=30000
          DB_CONNECTION_TIMEOUT=60000
          NODE_ENV=production
          PORT=3001
          EOF
          fi
          
          # Start new container
          docker run -d \
            --name request-backend \
            --restart unless-stopped \
            --env-file /home/ec2-user/production.env \
            -p 0.0.0.0:3001:3001 \
            ghcr.io/cybersec-git-expert/request-backend:latest
          
          # Wait and health check
          sleep 15
          for i in {1..20}; do
            if curl -f http://localhost:3001/health; then
              echo "✅ Health check passed"
              break
            fi
            echo "⏳ Waiting for health check... ($i/20)"
            sleep 10
          done
          
          echo "🚀 Deployment completed"