name: Hot Deploy Backend (Zero Downtime)

on:
  push:
    branches: [ master, main ]
    paths:
      - 'backend/**'
      - '.github/workflows/hot-deploy.yml'
  workflow_dispatch:

jobs:
  hot-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Hot Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "üî• Starting hot deployment (zero downtime)..."
          
          # Check if container is running
          if ! docker ps | grep -q "request-backend-container"; then
            echo "‚ö†Ô∏è Container not running, falling back to full deployment..."
            
            # Create deployment directory
            mkdir -p /tmp/request-backend-deploy
            cd /tmp/request-backend-deploy
            
            # Clone the repository
            echo "üì• Cloning repository..."
            git clone https://github.com/cybersec-git-expert/request.git .
            cd backend
            
            # Build and start container
            echo "üî® Building Docker image..."
            docker build -t request-backend:latest .
            
            echo "üöÄ Starting new container..."
            docker run -d --name request-backend-container \
              --restart unless-stopped \
              --env-file /home/ec2-user/production.env \
              --label "com.cybersec-git-expert.app=request-backend" \
              -p "0.0.0.0:3001:3001" \
              request-backend:latest
              
            # Cleanup
            cd /home/ec2-user
            rm -rf /tmp/request-backend-deploy
          else
            echo "üîÑ Hot updating running container..."
            
            # Create temp directory for updates
            mkdir -p /tmp/hot-update
            cd /tmp/hot-update
            
            # Clone latest code
            git clone https://github.com/cybersec-git-expert/request.git .
            
            # Copy updated files into running container
            echo "üìÅ Copying updated backend files..."
            docker cp backend/. request-backend-container:/app/
            
            # Restart the Node.js process inside container (graceful restart)
            echo "üîÑ Gracefully restarting Node.js process..."
            docker exec request-backend-container sh -c "pkill -SIGTERM node || true"
            
            # Wait a moment for graceful shutdown
            sleep 3
            
            # The container's restart policy will automatically restart the process
            # Or we can explicitly restart it:
            docker exec -d request-backend-container sh -c "cd /app && npm start"
            
            # Cleanup
            cd /home/ec2-user
            rm -rf /tmp/hot-update
          fi
          
          # Health check
          echo "üè• Performing health check..."
          sleep 5
          
          for i in {1..30}; do
            if curl -s -f "http://localhost:3001/health" >/dev/null 2>&1; then
              echo "‚úÖ Hot deployment successful! Zero downtime achieved."
              docker logs --tail 10 request-backend-container
              exit 0
            else
              echo "‚è≥ Waiting for service to respond... ($i/30)"
              sleep 2
            fi
          done
          
          echo "‚ùå Health check failed after hot deployment!"
          echo "Container logs:"
          docker logs --tail 50 request-backend-container
          exit 1

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Hot deployment completed successfully with zero downtime!"
          echo "üåê Backend is available at: http://${{ secrets.EC2_HOST }}:3001"
        else
          echo "‚ùå Hot deployment failed!"
        fi
